import { OnInit, ElementRef } from '@angular/core';
import { AutocompleteOptions } from './auto-complete-options';
import { AutocompleteItem } from './auto-complete-item';
import { Observer, Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class AutoCompleteComponent implements OnInit {
    _disabled: string;
    inputElement: ElementRef;
    inputWrapper: ElementRef;
    inputTextValue: string;
    inputObserver: Observer<string>;
    disabled: boolean;
    isQuerying: boolean;
    hasQueried: boolean;
    isFocusedInput: boolean;
    isFocusedItem: boolean;
    requiresMinCharacters: boolean;
    _options: AutocompleteOptions;
    highlightedItem: number;
    selectedItem: AutocompleteItem;
    itemList: AutocompleteItem[];
    completeList: AutocompleteItem[];
    listProvider: (any: any) => Observable<any[]>;
    get noResults(): boolean;
    get isOpen(): boolean;
    get inputPlaceholder(): string;
    id: string;
    bootstrap: boolean;
    set options(options: AutocompleteOptions);
    set provider(provider: (any: any) => Observable<any[]>);
    set list(list: any[]);
    constructor(_disabled: string);
    ngOnInit(): void;
    private createQueryObservable;
    selectItem(_element: number | string | AutocompleteItem, emitEvent?: boolean): void;
    inputTextKeyDown(event: any): void;
    inputTextKeyUp(event: KeyboardEvent): void;
    inputChange(event: any): void;
    filterlist(query: any): void;
    fetchList(query: any): void;
    /*******************EVENTS*******************/
    elementFocus(): void;
    elementBlur(): void;
    dropdownMouseEnter(): void;
    dropdownMouseLeave(): void;
    itemClick(id: any, index: any): void;
    itemHover(index: any): void;
    onBlur(): void;
    onFocus(): void;
    resetFocus(): void;
    wrapperBlur(): void;
    wrapperFocus(): void;
    static ɵfac: i0.ɵɵFactoryDef<AutoCompleteComponent, [{ attribute: "disabled"; }]>;
    static ɵcmp: i0.ɵɵComponentDefWithMeta<AutoCompleteComponent, "lib-auto-complete", never, { "id": "id"; "bootstrap": "bootstrap"; "options": "options"; "provider": "provider"; "list": "list"; }, {}, never, never>;
}
